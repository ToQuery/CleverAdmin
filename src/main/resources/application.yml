logging:
  level:
    root: DEBUG

# 服务器配置
server:
  port: 8888
  address:  # bind to a specific NIC
  session:
    timeout: 1800 # session timeout in seconds
  context-parameters.*: # Servlet context init parameters, e.g. server.context-parameters.a: alpha
  context-path: / # the context path, defaults to '/'
  servlet-path: / # the servlet path, defaults to '/'


spring:

# PROFILES
  profiles:
    active:  # Comma-separated list (or list if using YAML) of active profiles.
    include:  # Unconditionally activate the specified comma separated profiles (or list of profiles if using YAML).

# 配置数据原
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/cleverweb?useUnicode=true&characterEncoding=utf-8
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver

#Spring Data REST
  data:
    rest:
      basePath: /api

# jpa 配置
  jpa:
    database: MYSQL
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
        ddl-auto: update

# redis配置
  redis:
    # url: 127.0.0.1 # Connection URL, will override host, port and password (user will be ignored), e.g. redis://user:password@example.com:6379
    host: 127.0.0.1 # Redis server host.
    password: 123456 # Login password of the redis server.
    ssl: false # Enable SSL support.
    pool.max-active: 200 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
    pool.max-idle: 100 # Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
    pool.max-wait: 20 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
    pool.min-idle: 10 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
    port: 6379 # Redis server port.

# session配置
  session:
    store-type: redis # Session store type.
    redis:
      flush-mode: on-save # Sessions flush mode.
      namespace:  session # Namespace for keys used to store sessions.

# Email (MailProperties)
  mail:
    default-encoding: UTF-8 # Default MimeMessage encoding.
    host:  smtp.163.com # SMTP server host. For instance `smtp.example.com`
    jndi-name:  # Session JNDI name. When set, takes precedence to others mail settings.
    password:  # Login password of the SMTP server.
    port:  # SMTP server port.
    properties.*:  # Additional JavaMail session properties.
    protocol: smtp # Protocol used by the SMTP server.
    test-connection: false # Test that the mail server is available on startup.
    username:  toquery@163.com # Login user of the SMTP server.

# mvc
  mvc:
    view:
      prefix: classpath:/view/
      suffix: .jsp

# thymeleaf
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML5
    encoding: UTF-8
    content-type: text/html;charset=UTF-8
    cache: false

mybatis:
  mapper-locations: classpath:/mybatis/mapper/*.xml
  type-aliases-package: com.toquery.cleverweb.entity.po
  type-handlers-package: com.toquery.cleverweb.dao.mybatis
  configuration:
      map-underscore-to-camel-case: true
      default-fetch-size: 100
      default-statement-timeout: 30


mapper:
  not-empty: false
  identity: MYSQL
#  mappers:
#     - com.toquery.cleverweb.core.repository.CleverWebMapper

pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql
