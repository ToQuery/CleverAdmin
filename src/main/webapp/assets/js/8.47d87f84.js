(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{208:function(a,t,e){"use strict";e.r(t);var s=e(0),v=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"入门指南"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#入门指南"}},[a._v("#")]),a._v(" 入门指南")]),a._v(" "),e("blockquote",[e("p",[a._v("CleverWeb 即敏捷的Web，可能是最符合中国国情的首个前后端结合的项目。项目只包含基本的用户，菜单，和权限控制，可用于CMS 等后台管理端的快速成型。")])]),a._v(" "),e("h2",{attrs:{id:"项目概要"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#项目概要"}},[a._v("#")]),a._v(" 项目概要")]),a._v(" "),e("p",[a._v("项目第一条：不重复造轮子！市面上存在多个后端管理系统，前后端分离的、普通 thymeleaf 的、以及最基础的jQuery 等等，功能基本相同，互有利弊。")]),a._v(" "),e("p",[a._v("项目采用前后端架构分离但结构结合的设计，前端使用 "),e("code",[a._v("vue")]),a._v("、"),e("code",[a._v("element-ui")]),a._v(" 后端使用"),e("code",[a._v("spring-boot")]),a._v("，前端使用 panJiaChen 大神的 "),e("a",{attrs:{href:"github.com/panJiaChen/vue-element-admin"}},[a._v("vue-element-admin")]),a._v(" 项目，提供基础vue框架结构，采用 Git SubTree 模式同步更新项目修复BUG 。后端使用 "),e("code",[a._v("spring-boot")]),a._v(" 全家桶，前后端使用 "),e("code",[a._v("JWT")]),a._v(" 方式加密认证。同时，受"),e("a",{attrs:{href:"https://www.jhipster.tech/",target:"_blank",rel:"noopener noreferrer"}},[a._v("jhipster"),e("OutboundLink")],1),a._v(" 项目启发，使用基于maven的插件实现前后段结构结合。")]),a._v(" "),e("ul",[e("li",[a._v("jhipster")])]),a._v(" "),e("blockquote",[e("p",[a._v("Jhipster是一个生成、开发和部署的开发平台 Spring Boot + Angular/React Web 应用 and Spring 微服务.")]),a._v(" "),e("ul",[e("li",[a._v("服务器端使用Spring Boot的高性能健壮Java堆栈")]),a._v(" "),e("li",[a._v("时尚, 现代化, 移动优先 前端Angular, React and Bootstrap")]),a._v(" "),e("li",[a._v("一个强大的微服务架构，包含jhipster注册表、Netflix OSS、弹性堆栈和Docker")]),a._v(" "),e("li",[a._v("使用Yeoman、Webpack和Maven/Gradle构建应用程序的强大工作流")])])]),a._v(" "),e("ul",[e("li",[a._v("站在巨人肩上")])]),a._v(" "),e("p",[a._v("项目使用"),e("code",[a._v("git subtree")]),a._v(" 同步更新前端代码。既保证原项目仓库代码的更新，也能实现本项目个性化设置。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" subtree pull -P src/main/webapp git@github.com:PanJiaChen/vue-element-admin.git i18n --squash\n")])])]),e("h2",{attrs:{id:"new-features"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#new-features"}},[a._v("#")]),a._v(" New Features:")]),a._v(" "),e("ul",[e("li",[a._v("[ ] 自动生成模板时候，根据类型生成不同的元素")])]),a._v(" "),e("h2",{attrs:{id:"运行项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行项目"}},[a._v("#")]),a._v(" 运行项目")]),a._v(" "),e("h3",{attrs:{id:"基础环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础环境"}},[a._v("#")]),a._v(" 基础环境")]),a._v(" "),e("ul",[e("li",[a._v("jdk8+")]),a._v(" "),e("li",[a._v("maven")]),a._v(" "),e("li",[a._v("node（npm）可不安装，但注意保持和pom配置版本一致")])]),a._v(" "),e("h3",{attrs:{id:"基于maven运行-推荐"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于maven运行-推荐"}},[a._v("#")]),a._v(" 基于maven运行(推荐)")]),a._v(" "),e("ol",[e("li",[a._v("进入项目根目录 "),e("code",[a._v("mvn clean install")])]),a._v(" "),e("li",[a._v("项目打包 "),e("code",[a._v("mvn clean package -X -DskipTests")])]),a._v(" "),e("li",[a._v("运行 "),e("code",[a._v("java -jar target/xxxx.jar")])])]),a._v(" "),e("h3",{attrs:{id:"使用-intellj-idea-运行（建议安装-node）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-intellj-idea-运行（建议安装-node）"}},[a._v("#")]),a._v(" 使用 IntellJ IDEA 运行（建议安装 node）")]),a._v(" "),e("ol",[e("li",[a._v("以普通maven项目导入项目")]),a._v(" "),e("li",[a._v("添加 SpringBoot 项目运行方式运行后端项目（默认使用H2数据库）")]),a._v(" "),e("li",[a._v("命令行进入项目根目录，"),e("code",[a._v("npm install")])]),a._v(" "),e("li",[a._v("运行 "),e("code",[a._v("npm run dev")]),a._v("，可进入开发模式")])]),a._v(" "),e("p",[e("strong",[a._v("注意后端项目使用"),e("code",[a._v("8080")]),a._v("端口，前端项目使用"),e("code",[a._v("9527")]),a._v("端口，使用"),e("code",[a._v("9527")]),a._v("端口可实现页面动态")])]),a._v(" "),e("h3",{attrs:{id:"打包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#打包"}},[a._v("#")]),a._v(" 打包")]),a._v(" "),e("ul",[e("li",[a._v("以普通jar文件方式")])]),a._v(" "),e("p",[a._v("运行 "),e("code",[a._v("mvn clean pageage -X -DskipTests")]),a._v(" ,将前后端项目同时打包运行（推荐！！！不需要另行配置nginx代理）。")]),a._v(" "),e("ul",[e("li",[a._v("以docker方式")])]),a._v(" "),e("p",[a._v("docker run")]),a._v(" "),e("h2",{attrs:{id:"package-json-配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#package-json-配置"}},[a._v("#")]),a._v(" package.json 配置")]),a._v(" "),e("ul",[e("li",[a._v("postcss 代替根目录下的 .postcssrc.js")])]),a._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[a._v('"postcss"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n    "),e("span",{pre:!0,attrs:{class:"token property"}},[a._v('"plugins"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[a._v('"autoprefixer"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=v.exports}}]);